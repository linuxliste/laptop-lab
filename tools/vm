#!/bin/bash
# Provision VM

dc_home="/home/mj/ansible/localdc"

for i in `ls $dc_home/distributions/*.dist`; do
	DISTS="$DISTS`echo $i | xargs basename`|"
done > /dev/null 2>&1

if [[ "$DISTS" = "" ]]; then
	echo "No distributions defined, please create distributions based on $dc_home/distributions/distro.dist.template"
	exit 0
fi

DISTS=${DISTS::len-1}

helpme(){
        echo "Usage: $0 [hostname.mrmeee.net] [number-of-cpus] [mb of memory] [Optional: $DISTS] [Optional: pcidss|apache|quarkus|aap]"
	exit 0
}

if [ "$#" -eq 0 ]
then
	helpme
fi

case $1 in
	*help)
		helpme
	;;
esac

vm_hostname=$1
vm_cpu=$2
vm_mem=$3
vm_ssh_key="/home/mj/.ssh/id_rsa.pub"
vm_image="$dc_home/vms/${vm_hostname}.qcow2"

if [[ "$4" == ""]]; then
	if [ ! -f $dc_home/distributions/default ]; then
		echo "No distribution has been selected and default distribution haven't been set."
		echo "Please create a symlink: $dc_home/distributions/default, that points to the default distribution"
		exit 0
	fi

	source $dc_home/distributions/default
else
	if [ ! -f $dc_home/distributions/$4 ]; then
		echo "Distribution $4 isn't defined."
		echo "Please choose one of: $DISTS" 
		exit 0
	fi

	source $dc_home/distributions/$4

fi

echo "Deploying $DISTNAME"
vm_template=$DISTFILE
vm_playbooks=$DISTPLAYBOOKS

cp $vm_template $vm_image

# Prepare VM-image
virt-sysprep --hostname $vm_hostname --enable customize -a $vm_image --ssh-inject root:file:$vm_ssh_key

# Create and startup VM
cd $dc_home
sudo ansible-playbook provision.yml -e vm_image_name=$(echo $vm_image|sed 's/.qcow2//g') -e vm_name=$vm_hostname -e vm_vcpus=$vm_cpu -e vm_ram_mb=$vm_mem -e vm_net=default

echo $vm_hostname >$dc_home/tmpinventory

# Wait for system to come up
while true
do
	ssh -o StrictHostKeyChecking=no -q root@$vm_hostname exit
	if [ "$?" -eq 0 ]
	then
		echo "$vm_hostname is up, initiating setup."
		break
	else
		echo "Waiting for $vm_hostname to come up."
		sleep 1
	fi
done

# Run playbooks
for playbook in $vm_playbooks; do 
	echo "Running playbook: $dc_home/playbooks/$playbook"
	ansible-playbook -i $dc_home/tmpinventory $dc_home/playbooks/$playbook
done

# Optional config
case $4 in
	pcidss)
		ansible-playbook -i $dc_home/tmpinventory pcidss.yml
	;;
	apache)
		ansible-playbook -i $dc_home/tmpinventory apache.yml
	;;
	quarkus)
		ansible-playbook -i $dc_home/tmpinventory quarkus.yml
	;;
	aap)
		ansible-playbook -i $dc_home/tmpinventory aap.yml
	;;
esac

